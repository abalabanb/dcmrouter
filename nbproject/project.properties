application.args=
build.classes.dir=${build.dir}/classes
build.classes.excludes=**/*.java,**/*.form
# This directory is removed when the project is cleaned:
build.dir=build
build.generated.dir=${build.dir}/generated
# Only compile against the classpath explicitly listed here:
build.sysclasspath=ignore
build.test.classes.dir=${build.dir}/test/classes
build.test.results.dir=${build.dir}/test/results
debug.classpath=\
    ${run.classpath}
debug.test.classpath=\
    ${run.test.classpath}
# This directory is removed when the project is cleaned:
dist.dir=dist
dist.jar=${dist.dir}/dcmrouter.jar
# Added by Thomas Hacklaender 2006-02-25
# dist.javadoc.dir=${dist.dir}/javadoc
doc.dir=doc
dist.javadoc.dir=${doc.dir}/javadoc
file.reference.dcm4che.jar-1=lib/dcm4che.jar
file.reference.dcmrouter_3.0_beta_060223-source=source
file.reference.dcmrouter_3.0_beta_060223-test=test
file.reference.dcmrouter_extensions_3.0.0-source_extensions=../dcmrouter_extensions_3.0.0/source_extensions
file.reference.DcmServices.jar=lib/DcmServices.jar
file.reference.getopt.jar=lib/getopt.jar
file.reference.jai_imageio_api.zip=lib/jai_imageio_api.zip
file.reference.log4j.jar=lib/log4j.jar
jar.compress=false
javac.classpath=\
    ${file.reference.dcm4che.jar-1}:\
    ${file.reference.DcmServices.jar}:\
    ${file.reference.getopt.jar}:\
    ${file.reference.jai_imageio_api.zip}:\
    ${file.reference.log4j.jar}
# Space-separated list of extra javac options
javac.compilerargs=
javac.deprecation=true
javac.source=1.4
javac.target=1.4
javac.test.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}:\
    ${libs.junit.classpath}
javadoc.additionalparam=
javadoc.author=false
javadoc.encoding=
javadoc.noindex=false
javadoc.nonavbar=false
javadoc.notree=false
javadoc.private=true
javadoc.splitindex=true
javadoc.use=true
javadoc.version=false
javadoc.windowtitle=
main.class=de.iftm.dcm4che.router.gui.DicomRouterGUI
manifest.file=manifest.mf
meta.inf.dir=${src.dir}/META-INF
platform.active=default_platform
run.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}
# Space-separated list of JVM arguments used when running the project
# (you may also define separate properties like run-sys-prop.name=value instead of -Dname=value
# or test-sys-prop.name=value to set system properties for unit tests):
run.jvmargs=
run.test.classpath=\
    ${javac.test.classpath}:\
    ${build.test.classes.dir}
src.source.dir=source
src.source_extensions.dir=extensions\\source_extensions
test.src.dir=test\\src
test.test_extensions.dir=extensions\\test_extensions
